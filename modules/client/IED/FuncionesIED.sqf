if (isnil 'Colum_IED_inividores') then {Colum_IED_inividores=[]};IED_fn_IsVehicle={	private ["_objOrType", "_result"];	_objOrType = _this select 0;	_result = (	  (_objOrType isKindOf "Car") ||	  (_objOrType isKindOf "Motorcycle") || 	  (_objOrType isKindOf "Bicycle") || 	  (_objOrType isKindOf "Tank") ||	  (_objOrType isKindOf "Air") ||	  (_objOrType isKindOf "Ship")	);	_result};IED_Mensaje={	private["_ID"];	_ID= _this select 0;	if (true) exitwith{};	switch (_ID) do {		case 1: {[playerSide, "HQ"] sideChat "I.E.D. detonated"};		default {[playerSide, "HQ"] sideChat "I.E.D. detonated"};	}};IED_Quitar_Acciones={	private["_IED","_acciones"];	_IED= _this select 0;	_acciones = _IED GetVariable "IED_Acciones";	if (!isnil "_acciones") then {		{ _IED removeAction _x} foreach _acciones;		_IED setvariable ["IED_Acciones", nil];	};};IED_Accion_Manipular={	private["_IED","_exam","_proba","_activo","_acciones","_TMPacciones","_TiempoDesact"];	_IED = _this select 0;	_exam= (_this select 1) select 0;	_proba= (_this select 1) select 1;	if (_exam) exitwith { [_IED,_proba] call IED_Accion_Examinar};		player playMove "amovpknlmstpslowwrfldnon";			Colum_IED_Actual=_IED;		_proba call IED_Colum_Bomba_Inicio;	};IED_Accion_Examinar={	private["_IED","_proba","_activo","_acciones"];	_IED = _this select 0;	_proba= _this select 1;	_activo = _IED getVariable "IED_Activo";		[_IED] call IED_Quitar_Acciones;		sleep 1;	if (isNil "_activo") exitwith {	hint parseText "<t color='#f004FF00'>Clear!</t>, nothing suspicious here."};		hint parseText "<t color='#f0FF0000'>Caution!</t>, you see some suspicious wires.";	_acciones=[];	_accion=_IED addAction ["<t color='#f0CCCCCC'>Try to disarm IED.</t>", "Scripts\IED\Manipular.sqf", [false,_proba]];	_acciones =_acciones +[_accion];	_IED setvariable ["IED_Acciones", _acciones];};IED_Anadir_Acciones={	private["_IED","_proba","_acciones","_MostrarInactivos","_condicion"];	_IED = _this select 0;	_proba= _this select 1;	_MostrarInactivos= _this select 2;		if (_MostrarInactivos) then { _condicion = "true"} else {_condicion="!(isNil {_target getVariable 'IED_Activo'})"};	_acciones =[];	_accion=_IED addAction ["<t color='#f0CCCCCC'>Examine/search</t>", "Scripts\IED\Manipular.sqf",[true,_proba],5,true,true,"",_condicion];	_acciones =_acciones +[_accion];	_IED setvariable ["IED_Acciones", _acciones];	};IED_Detonar_Trigg={	private["_inhibido","_IED","_Terrorista"];	if (!isServer) exitWith {};	_IED= _this select 0;	_inhibido=false;	{		if ((_IED distance _x) <= (_x getvariable 'IED_rango_inividor')) then {			_inhibido=true;		};	} Foreach Colum_IED_inividores;		_Terrorista= _IED getvariable 'IED_Terrorista';	if (!isnil '_Terrorista') then{if (!alive _Terrorista) then{_inhibido=true}};	if (!_inhibido) then {_this call IED_Detonar};};IED_Detonar={	private["_IED","_active","_pos","_explosive","_explosiveType"];	if (!isServer) exitWith {};	_IED = _this select 0;	_active = _IED getVariable "IED_Activo";	_explosiveType=_IED getVariable "IED_Typo";		if (isNil "_active") exitWith {};	[_IED] call IED_DesActivar;	[-1, {[1] call IED_Mensaje}, []] call CBA_fnc_globalExecute;	_pos = position _IED;		if (_explosiveType != 'Especial_De_La_Casa') then {		_explosive = _explosiveType createVehicle _pos;		_explosive setDamage 1.0;	} else {		_explosive = "ARTY_R_227mm_HE" createVehicle _pos;		_explosive setDamage 1.0;		_pos=_IED modelToWorld [30,0,0];		_explosive = "BO_GBU12_LGB" createVehicle _pos;		_explosive setDamage 1.0;		_pos=_IED modelToWorld [-30,0,0];		_explosive = "BO_GBU12_LGB" createVehicle _pos;		_explosive setDamage 1.0;		_pos=_IED modelToWorld [0,30,0];		_explosive = "BO_GBU12_LGB" createVehicle _pos;		_explosive setDamage 1.0;		_pos=_IED modelToWorld [0,-30,0];		_explosive = "BO_GBU12_LGB" createVehicle _pos;		_explosive setDamage 1.0;		_pos=_IED modelToWorld [0,0,4];		_explosive = "BO_GBU12_LGB" createVehicle _pos;		_explosive setDamage 1.0;	};	_IED setDamage 1.0;};IED_DesActivar={	if (!isServer) exitWith {};	private["_IED", "_trig"];	_IED = _this select 0;	_keepDetonateAction = if (count _this > 1) then {_this select 1} else {false};	_IED setvariable ["IED_Activo", nil,true];	_IED setvariable ["IED_Typo", nil];	_trig = _IED getvariable "IED_Trigger";	deletevehicle _trig;	_IED setvariable ["IED_Trigger", nil];	_IED removeAllEventHandlers "engine";	_IED removeAllEventHandlers "killed";    	[-1, { _this call IED_Quitar_Acciones  }, [_IED]] call CBA_fnc_globalExecute;};IED_Colum_booom={	if (Colum_Bomba_Estado==5) exitwith{};	Colum_Bomba_Estado=5;		disableserialization;	_tmpDisplay = findDisplay 48620;	_tmpCtrl=_tmpDisplay displayCtrl 1001;	_tmpCtrl ctrlSetText 'DETONATING';		_tmpCtrl=[(_tmpDisplay displayCtrl 1205),(_tmpDisplay displayCtrl 1206),	(_tmpDisplay displayCtrl 1207),(_tmpDisplay displayCtrl 1208)];	{		(_tmpCtrl select _forEachIndex) ctrlSetText 'Scripts\IED\Images\rojo.paa';		(_tmpCtrl select _forEachIndex) ctrlCommit 0;	} foreach Colum_Bomba_Luces;		[Colum_IED_Actual, "Bomba_armandose"] call CBA_fnc_globalSay3d;	sleep 1.5;	[0, { [_this] call IED_Detonar}, Colum_IED_Actual ] call CBA_fnc_globalExecute;	closedialog 0;};IED_colum_bomba_desactivada ={	Colum_Bomba_Estado=0;	hint 'IED desactivado correctamente';	disableserialization;	_tmpDisplay = findDisplay 48620;	_tmpCtrl=_tmpDisplay displayCtrl 1001;	_tmpCtrl ctrlSetText 'DISARMED';		[0, { _this call IED_DesActivar}, [Colum_IED_Actual]] call CBA_fnc_globalExecute;};IED_Colum_Corta_Cable={	private['_tmpDisplay','_tmpCtrl','_Colum_Imagen','_tmpCtrl2'];		if ((Colum_Bomba_Luces select _this) == 0) exitwith {call IED_Colum_booom};	if ((Colum_Bomba_cables select _this) == 0) exitwith {};	Colum_Bomba_cables set [_this,0];		disableserialization;	_tmpDisplay = findDisplay 48620;	_tmpCtrl=[(_tmpDisplay displayCtrl 1205),(_tmpDisplay displayCtrl 1206),(_tmpDisplay displayCtrl 1207),(_tmpDisplay displayCtrl 1208)];	_tmpCtrl2=[(_tmpDisplay displayCtrl 1201),(_tmpDisplay displayCtrl 1202),(_tmpDisplay displayCtrl 1203),(_tmpDisplay displayCtrl 1204)];		if (Colum_Bomba_Estado == 1) then {		Colum_Bomba_Estado=2;	} else {	  if ((Colum_Bomba_cables select 0 == 0) && (Colum_Bomba_cables select 1 == 0) && (Colum_Bomba_cables select 2 == 0) && (Colum_Bomba_cables select 3 == 0)) then 		{			call IED_colum_bomba_desactivada;		};	};		{		(_tmpCtrl2 select _forEachIndex) ctrlShow (_x==1);		(_tmpCtrl2 select _forEachIndex) ctrlCommit 0;	} foreach Colum_Bomba_cables;	};IED_Colum_Bomba_Inicio={	private['_fijo','_variable','_TiempoDesact'];	createdialog "colum_class_bomba_dialog";	Colum_Bomba_Estado=1;	Colum_Bomba_cables = [1, 1, 1, 1];	Colum_Bomba_Luces = [0, 0, 0, 0];		_TiempoDesact=4 + (20*(_proba/100));	_TiempoDesact spawn IED_Colum_bomba_Pitidos;		switch (true) do {		case (_this <25): {_fijo=0.2;_variable=0.5};		case ((_this >=25)&&(_this <50)): {_fijo=0.7;_variable=0.6};		case ((_this >=50)&&(_this <75)): {_fijo=0.9;_variable=0.5};		default {_fijo=1.3;_variable=0.3};	};		[_fijo,_variable] spawn {		private['_tmpDisplay','_tmpCtrl','_Colum_Imagen','_valor','_fijo','_variable'];		disableserialization;		_fijo=_this select 0; _variable=_this select 1;		_tmpDisplay = findDisplay 48620;		_tmpCtrl=[(_tmpDisplay displayCtrl 1205),(_tmpDisplay displayCtrl 1206),		(_tmpDisplay displayCtrl 1207),(_tmpDisplay displayCtrl 1208)];		waituntil {dialog};		while{((Colum_Bomba_Estado==1) || (Colum_Bomba_Estado==2)) && dialog} do		{			{				Colum_Bomba_Luces set [_foreachIndex,if (_x ==1) then {(round (random 1))} else {1}];			} foreach Colum_Bomba_cables;						{				if (_x==1) then {_Colum_Imagen="verde.paa"} else {_Colum_Imagen="rojo.paa"};				(_tmpCtrl select _forEachIndex) ctrlSetText format["Scripts\IED\Images\%1",_Colum_Imagen];				(_tmpCtrl select _forEachIndex) ctrlCommit 0;			} foreach Colum_Bomba_Luces;			sleep (_fijo +(random _variable));		};			};};Colum_ecuacion_recta={	private ['_x','_X1','_X2','_Y1','_Y2','_m','_y'];	_x=_this select 0; _X1=_this select 1;	_X2=_this select 2; _Y1=_this select 3;	_Y2=_this select 4;	_m=(_Y2-_Y1)/(_X2-_X1);	_y=(_m *_x) + (_Y1-(_X1 * _m));	_y;};IED_Colum_bomba_Pitidos={	private ['_TiempoRestante','_lastBeep','_fintiempo','_distancia']; 	_lastBeep=time;	_fintiempo=time+ _this;	if(IED_Colum_bomba_Pitando) exitwith{};	IED_Colum_bomba_Pitando=true;	while{((Colum_Bomba_Estado==1) || (Colum_Bomba_Estado==2)) && (time < _fintiempo)} do	{		_distancia=_fintiempo-time;		if ((time - _lastBeep) >([_distancia,0.001,20,0.01,2] call Colum_ecuacion_recta)) then {			playsound 'Bomba_Beep';			_lastBeep=time;		};		sleep 0.03;	};	IED_Colum_bomba_Pitando=false;	if (Colum_Bomba_Estado!=0) then {call IED_Colum_booom};};Colum_IEDdetector_toggle ={	Colum_DetectorIED_activo= ! Colum_DetectorIED_activo;	if (Colum_DetectorIED_activo) then {		(_this select 0) spawn {_this call Colum_DetectorIED};		hint parseText "You have <t color='#f004FF00'>activated</t> the frequency scanner, searching for posible IEDs";	} else {	hint parseText "You have <t color='#f0FF0000'>deactivated</t> the frequency scanner";	};};Colum_localizador_Beep={	for [{_x=1},{_x<=_this},{_x=_x+1}] do	{		playsound 'Detector_Beep';		sleep 0.1;	};};Colum_DetectorIED={	private ['_distanciaMin','_distancia','_DistanciaIED','_MasCercano','_lastBeep','_lasCheckIED'];	_distanciaMin=_this;	_lastBeep=time;	_lasCheckIED=time;	While{Colum_DetectorIED_activo} do	{		if (count ListaIEDs <= 0) exitwith{Colum_DetectorIED_activo=false};		_DistanciaIED=10000;		if (time > _lasCheckIED && !isServer) then {_lasCheckIED = time +60; call colum_IED_checkList};		{			_distancia=player distance _x;			if (_distancia < _distanciaMin) then {				if (!isnil {_x getVariable "IED_Activo"}) then {					if (_distancia < _DistanciaIED) then {_DistanciaIED=_distancia;};				};			};		}foreach ListaIEDs;		if (_DistanciaIED < _distanciaMin) then{			switch (true) do 			{			  case (_DistanciaIED < 100): {if ((time - _lastBeep) >([_DistanciaIED,0.001,70,0.01,2] call Colum_ecuacion_recta)) then {3 spawn Colum_localizador_Beep;_lastBeep=time}};			  case (_DistanciaIED >= 100 && (_DistanciaIED < 500)): {if ((time - _lastBeep) >([_DistanciaIED,100,500,2,6] call Colum_ecuacion_recta)) then {2 spawn Colum_localizador_Beep;_lastBeep=time}};			  case (_DistanciaIED >= 500&& (_DistanciaIED < 2000)): {if ((time - _lastBeep) >([_DistanciaIED,500,1000,6,20] call Colum_ecuacion_recta)) then {1 spawn Colum_localizador_Beep;_lastBeep=time}};			};		};				sleep 0.03;	};};colum_IED_checkList={	private ['_tmpList'];	_tmpList=[];	{		if (!isnil {_x getVariable "IED_Activo"}) then {_tmpList=_tmpList+[_x];};	}foreach ListaIEDs;	ListaIEDs=_tmpList;};